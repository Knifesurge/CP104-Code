"""
------------------------------------------------------------------------

------------------------------------------------------------------------
Author: Nicolas Mills
ID:     180856100
Email:  mill6100@mylaurier.ca
__updated__ = 2018-10-29
------------------------------------------------------------------------
"""
from math import pi
# Task 1
def sum_even(num):
    """
    -------------------------------------------------------
    Sums and returns all even numbers from 2 to num (inclusive).
    Use: total = sum_even(num)
    -------------------------------------------------------
    Parameters:
        num - an integer (int > 0)
    Returns:
        total - sum of all even numbers from 2 to num (int)
    ------------------------------------------------------
    """
    total = 0
    for i in range(2, num + 2, 2):
        sum += i
    return total

# Task 2
def sum_odd(num):
    """
    -------------------------------------------------------
    Sums and returns all odd numbers from 1 to num (inclusive).
    Use: total = sum_odd(num)
    -------------------------------------------------------
    Parameters:
        num - an integer (int > 0)
    Returns:
        total - sum of all odd numbers from 1 to num (int)
    ------------------------------------------------------
    """
    total = 0
    for i in range(1, num + 1, 2):
        total += i
    return total

# Task 3
def sum_partial_harmonic(n):
    """
    -------------------------------------------------------
    Sums and returns the total of a partial harmonic series.
    This series is the sum of all terms 1/i, where i ranges
    from 1 to n (inclusive)
    i.e. 1 + 1/2 + 1/3 + ... + 1/n
    Use: total = sum_partial_harmonic(n)
    -------------------------------------------------------
    Parameters:
        n - an integer (int > 0)
    Returns:
        total - sum of partial harmonic series from 1 to n (int)
    ------------------------------------------------------
    """
    total = 0
    for i in range(1, n + 1):
        total += float(i / 1)
    return total

""" Task 7 start """

def diameter(radius):
    """
    -------------------------------------------------------
    Calculates and returns diameter of a circle.
    Use: d = diameter(radius)
    -------------------------------------------------------
    Parameters:
        radius - radius of a circle (float >= 0)
    Returns:
        d - diameter of a circle (float)
    ------------------------------------------------------
    """
    return (2 * radius)

def circumference(radius):
    """
    -------------------------------------------------------
    Calculates and returns circumference of a circle.
    Use: c = circumference(radius)
    -------------------------------------------------------
    Parameters:
        radius - radius of a circle (float >= 0)
    Returns:
        c - circumference of a circle (float)
    ------------------------------------------------------
    """
    return (2 * pi * radius)

def area(radius):
    return (pi * (radius ** 2))

""" Task 7 end """

# Task 8
def is_leap(year):
    if (year % 100) == 0:
        if (year % 4) == 0:
            if (year % 400) == 0:
                leap_year = True
            else:
                leap_year = False
        else:
            leap_year = False
    else:
        leap_year = False
    return leap_year